source('processing/loadfunctions.R')
source('processing/knighthelperfunctions.R')
files_location = 'data/'
samplerate<- 304.7508/1000
h <- loadGazeFiles(path = files_location)
install.packages(tidyr)
install.packages('tidyr')
h <- loadGazeFiles(path = files_location)
install.packages('data.table')
h <- loadGazeFiles(path = files_location)
install.packages('data.table')
h <- loadGazeFiles(path = files_location)
install.package('stringr')
install.packages('stringr')
h <- loadGazeFiles(path = files_location)
h <- loadGazeFiles(path = files_location)
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = TRUE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
install.packages('cladoRcpp')
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = TRUE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = TRUE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
head(h)
unique(h$block)
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = FALSE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
# hm_old <- readRDS('dashboard2018-02-10.RDS')
#
# hm_old %>%
#   filter(subject != 'CP48n') %>%
#   bind_rows(hm)->
#   hmfull
output_file = paste0('dashboards/output/dashboard',Sys.Date(),'.RDS')
saveRDS(hm, output_file)
install.packages(c("ggplot2", "ggpubr", "plotly"))
install.package('flexdashboard')
install.packages('flexdashboard')
head(hm)
len(hm)
length(hm)
length(h)
head(h)
h
nrow(h)
nrow(hm)
head(h)
head(hm)
demo_data = left_join(h, hm)
head(demo_data)
saveRDS(demo_data, 'dashboards/output/inspector_test_10-17.RDS')
unique(demo_data$block)
#' 2019 full pipeline
#' 1) Use matlab function to put .csv files in a folder for analysis
#' 2) execute the script below
source('processing/loadfunctions.R')
source('processing/knighthelperfunctions.R')
files_location = 'data/'
samplerate<- 304.7508/1000
h <- loadGazeFiles(path = files_location)
head(h)
nrow(h)
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = FALSE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
head(h)
#' 2019 full pipeline
#' 1) Use matlab function to put .csv files in a folder for analysis
#' 2) execute the script below
source('processing/loadfunctions.R')
source('processing/knighthelperfunctions.R')
files_location = 'data/'
samplerate<- 304.7508/1000
h <- loadGazeFiles(path = files_location)
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = FALSE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
qplot(counter, Graw, data = filter(h, counter< 10000))
library(ggplot2)
qplot(counter, Graw, data = filter(h, counter< 10000))
head(h)
qplot(counter, Graw, data = filter(h, counter< 10000, block ==h$block[1]))
qplot(counter, Graw, data = filter(h, counter< 10000, block ==h$block[1]), geom = 'line')
qplot(counter, Graw, data = filter(h, counter< 10000, block ==h$block[1]), geom = 'line', trialnum=1)
qplot(counter, Graw, data = filter(h, counter< 10000, block ==h$block[1], trialnum==1), geom = 'line')
qplot(counter, Graw, data = filter(h, counter< 10000, block ==h$block[1], trialnum==5), geom = 'line')
saveRDS(h, 'dashboards/output/trialtest1.RDS')
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = FALSE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
saveRDS(h, 'dashboards/output/trialtest1.RDS')
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
head(hm)
h <- left_join(h, hm)
saveRDS('dashboards/output/trialtest1.RDS')
saveRDS(h, 'dashboards/output/trialtest1.RDS')
output_file = paste0('dashboards/output/dashboard',Sys.Date(),'.RDS')
saveRDS(hm, output_file)
#' 2019 full pipeline
#' 1) Use matlab function to put .csv files in a folder for analysis
#' 2) execute the script below
source('processing/loadfunctions.R')
source('processing/knighthelperfunctions.R')
files_location = 'data/'
samplerate<- 304.7508/1000
h <- loadGazeFiles(path = files_location)
h %>%
group_by(block) %>%
arrange(blocknum) %>%
mutate(block_simple = min_rank(blocknum))->
htest
select(htest, block_simple, everything())
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = FALSE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
h <- left_join(h, hm)
saveRDS(h, paste0('dashboards/output/newtrialetest', Sys.Date(),'.RDS'))
output_file = paste0('dashboards/output/newdashboard', Sys.Date(),'.RDS')
saveRDS(hm, output_file)
h <- loadGazeFiles(path = files_location)
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = FALSE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
test_output = filter(h, block == 'aj28-ST-2015018')
write.csv(test_output, 'spike2test.csv')
head(test_output)
head(h)
h$block[1]
test_output = filter(h, block == 'aj28-ST-20150818')
write.csv(test_output, 'spike2test.csv')
#' 2019 full pipeline
#' 1) Use matlab function to put .csv files in a folder for analysis
#' 2) execute the script below
source('processing/loadfunctions.R')
source('processing/knighthelperfunctions.R')
files_location = 'data/'
samplerate<- 304.7508/1000
h <- loadGazeFiles(path = files_location)
#'Next: remove noise, blinks etc
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G = replace(G, is.na(G), 0), #replace na with zero since that's how it was originally
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = FALSE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h %>%
group_by(block) %>%
arrange(blocknum) %>%
mutate(block_simple = min_rank(blocknum))->
htest
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
h <- left_join(h, hm)
saveRDS(h, paste0('dashboards/output/newtrialetest', Sys.Date(),'.RDS'))
output_file = paste0('dashboards/output/newdashboard', Sys.Date(),'.RDS')
saveRDS(hm, output_file)
paste0('dashboards/output/newtrialetest', Sys.Date(),'.RDS')
head(hm)
View(hm)
View(hm)
write.csv(hm,"2015 data all.csv")
